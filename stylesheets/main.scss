@import "modules/-modules";
@import "modules/-reset";
$font-stack:    Helvetica, sans-serif;
$primary-color: #333;

body {
  font: 100% $font-stack;
  color: $primary-color;
}

/* Nesting */

table {
  margin: 2px 0;
  td {
    text-align: center
  }

  li {
    font: {
      family: Serif;
      weight: bold;
      size: 1px;
    }
  }
}

/* Variables */

$blue: #33a0f2;
$margin: 16px;

.content {
  border-color: $blue;
}

.border {
  padding: $margin / 2;
  margin: $margin / 2;
  border-color: $blue;
  padding: $padding;
}

/* Mixins */

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

.box { @include border-radius(10px); }

/* Extend/Inheritance */

%equal-heights {
  display: flex;
  flex-wrap: wrap;
}

%message-shared {
  border: 1px solid $blue;
  padding: 10px;
  color: #333;
}

.message {
  @extend %message-shared;
}

.success {
  @extend %message-shared;
  border-color: #a3adb3;
}

.warning {
  @extend %message-shared;
  padding: 5px;
}

.container { width: 100%; }


article[role="main"] {
  float: left;
  width: 600px / 960px * 100%;
}

aside[role="complementary"] {
  float: right;
  width: 300px / 960px * 100%;
}

$translucent-red: rgba(255, 0, 0, 0.5);
p {
  color: opacify($translucent-red, 0.3);
  background-color: transparentize($translucent-red, 0.25);
}


@mixin center{
  margin: {
    left: auto;
    right: auto;
  }
}

div {
  @include center;
}

@mixin font-source-sans($size: false, $colour: false, $weight: false,  $lh: false) {
  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
  @if $size { font-size: $size; }
  @if $colour { color: $colour; }
  @if $weight { font-weight: $weight; }
  @if $lh { line-height: $lh; }
}

div {
  @include font-source-sans();
}

$breakpoints: (
        "phone":        400px,
        "phone-wide":   480px,
        "phablet":      560px,
        "tablet-small": 640px,
        "tablet":       768px,
        "tablet-wide":  1024px,
        "desktop":      1248px,
        "desktop-wide": 1440px
);

@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}











